{"version":3,"sources":["Logo.PNG","SignUp.js","SignIn.js","InputField.js","NavBar.js","AddClient.js","App.js","AddClientReducer.js","store.js","index.js"],"names":["reduxForm","form","history","useHistory","useState","uname","pwd","cpwd","id","v4","user","setUser","useEffect","localStorage","setItem","JSON","stringify","handleInput","e","name","target","value","className","type","to","src","logo","alt","onSubmit","preventDefault","console","log","push","Field","placeholder","component","onChange","required","props","userInfos","setUserInfos","userInfo","Date","getTime","toString","InputField","useField","field","meta","label","htmlFor","error","touched","NavBar","href","connect","state","client","dispatch","bindActionCreators","saveForm","partners","partner","setPartner","addNewField","initialValues","firstName","middleName","lastName","email","phn","address","dob","age","gender","occupation","bussinessName","typeOfBussiness","avgIncome","validationSchema","Yup","shape","min","max","contact","values","setSubmitting","setTimeout","handleSubmit","accept","style","display","class","map","x","i","length","onClick","index","list","splice","removeField","handleInputChange","marginTop","height","marginLeft","App","path","exact","SignUp","SignIn","AddClient","initialState","rootReducer","combineReducers","formReducer","action","createStore","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.933c820d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo.bb3ce42d.PNG\";","import React, { useEffect, useState } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport './style.css';\r\nimport logo from './Logo.PNG';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { v4 } from \"uuid\";\r\n\r\n\r\nconst SignUp = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [user, setUser] = useState({  \r\n        uname:\"\",\r\n        pwd:\"\",\r\n        cpwd:\"\",\r\n        id: v4()\r\n\r\n    });\r\n\r\n    const { uname, pwd, cpwd } = user\r\n\r\n    \r\n    useEffect(() => {\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n      }, [user]);\r\n\r\n      /**\r\n       * To change the input value\r\n       * @param {event} e \r\n       */\r\n    const handleInput = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        setUser({ ...user, [name]:value});\r\n    }\r\n\r\n    /**\r\n     * To submit the value entered by user\r\n     * @param {event} e \r\n     */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(user);\r\n        setUser({uname:\"\", pwd:\"\", cpwd:\"\"});\r\n        history.push('/signIn');\r\n    };\r\n\r\n    return(\r\n        <div className=\"body\">\r\n            <h1> </h1>\r\n          <div className=\"formBox\">\r\n             {/* <!-- Sign up and Sign in button --> */}  \r\n             <button type=\"button\" id=\"signUpButton\"  >SIGN UP</button>\r\n             <Link to='/signIn'>\r\n                <button type=\"button\" id=\"signInButton\" >SIGN IN</button>\r\n             </Link>\r\n        \r\n             {/* <!-- Logo --> */}\r\n             <img className=\"logo\" src={logo} alt=\"Opcito\"/>\r\n\r\n             {/* <!-- Sign up form  --> */}\r\n             <form id=\"sign\" className=\"input-group1\" onSubmit={handleSubmit}>\r\n                <Field \r\n                    type=\"text\" \r\n                    className=\"InputField\" \r\n                    placeholder=\"Username*\" \r\n                    name=\"uname\" component=\"input\"\r\n                    value={uname}\r\n                    onChange={handleInput}\r\n                    required={true}\r\n                     />\r\n                <Field \r\n                    type=\"password\" \r\n                    className=\"InputField\" \r\n                    placeholder=\"Password*\" \r\n                    name=\"pwd\" component=\"input\"\r\n                    value={pwd}\r\n                    onChange={handleInput} \r\n                    required={true}/>\r\n                <Field \r\n                    type=\"password\" \r\n                    className=\"InputField\" \r\n                    placeholder=\"Confirm Password*\" \r\n                    name=\"cpwd\" component=\"input\"\r\n                    value={cpwd}\r\n                    onChange={handleInput}\r\n                    required={true} />\r\n                <button type=\"button\" id=\"cancelButton\">Cancel</button>\r\n                <button type=\"submit\" id=\"submitButton\">Submit</button>\r\n             </form>\r\n\r\n\r\n            \r\n         </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default reduxForm({\r\n    form: \"signUp\"\r\n})(SignUp);","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport logo from './Logo.PNG';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { v4 } from \"uuid\";\r\n\r\nconst SignIn = props => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [user, setUser] = useState({\r\n        uname:\"\",\r\n        pwd:\"\",\r\n        id: v4()\r\n    });\r\n\r\n    const [ userInfos, setUserInfos ] = useState([])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(user));\r\n      }, [user]);\r\n\r\n      /**\r\n       * To handle the input change\r\n       * @param {event} e \r\n       */\r\n    const handleInput = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        setUser({ ...user, [name]:value});\r\n    }\r\n\r\n    /**\r\n     * To submit the value entered by user\r\n     * @param {event} e \r\n     */\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const userInfo = { ...user, id: new Date().getTime().toString() }\r\n        setUserInfos([...userInfos, userInfo ]);\r\n        console.log(userInfo);\r\n        setUser({uname:\"\", pwd:\"\"});\r\n        history.push('/addClient');\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n        <div className=\"body\">\r\n            <h1> </h1>\r\n            <div className=\"formBox\">\r\n             {/* <!-- Sign up and Sign in button --> */}\r\n             <Link to='/signUp'>\r\n                <button type=\"button\" id=\"signUpButton\" >SIGN UP</button>\r\n             </Link>\r\n             <button type=\"button\" id=\"signInButton\" >SIGN IN</button>\r\n\r\n                {/* <!-- Logo --> */}\r\n                <img className=\"logo\" src={logo} alt=\"Opcito\"/>\r\n\r\n                {/* <!-- Sign in form  --> */}\r\n                <form id=\"sign\" className=\"input-group1\" onSubmit={handleSubmit}>\r\n                    <Field \r\n                        type=\"text\" \r\n                        className=\"InputField\" \r\n                        placeholder=\"Username*\" \r\n                        name=\"uname\" component=\"input\"\r\n                        value={user.uname}\r\n                        onChange={handleInput}\r\n                        required={true}\r\n                        />\r\n                    <Field \r\n                        type=\"password\" \r\n                        className=\"InputField\" \r\n                        placeholder=\"Password*\" \r\n                        name=\"pwd\" component=\"input\"\r\n                        value={user.pwd}\r\n                        onChange={handleInput} \r\n                        required={true}/>\r\n                    <button type=\"button\" id=\"cancelButton\">Cancel</button>\r\n                    <button type=\"submit\" id=\"submitButton\">Submit</button>\r\n                </form>\r\n                </div>\r\n        </div>\r\n        \r\n        \r\n    );\r\n}\r\n\r\nexport default reduxForm({\r\n    form: \"signIn\"\r\n})(SignIn);","import React from 'react';\r\nimport {useField} from 'formik';\r\nimport './style.css';\r\n\r\nconst InputField = (props) =>{\r\n  const [field,meta] = useField(props.name);\r\n\r\n  return(\r\n    <div className=\"form-group row no-gutters\">\r\n    {props.label && <label htmlFor={props.name} className=\"label col-lg-3\">{props.label}</label>}\r\n    <input\r\n    {...field}\r\n    {...props}\r\n    className=\" inputField col-lg-9\"/>\r\n    {meta.error && meta.touched && <p className=\"error\">{meta.error}</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InputField;\r\n\r\n// import React from 'react';\r\n// import './style.css'\r\n\r\n//   const InputField = ({ id, value, label, placeholder, type, onChange }) => {\r\n\r\n//   /**\r\n//    * To handle the input entered by user\r\n//    * @param {event} e \r\n//    * To store the value according to the label\r\n//    * @param {unique id} label \r\n//    */  \r\n//   const handleChange = (e, label) => {\r\n//       const  value  = e.target.value ;\r\n//       onChange(value, label);\r\n//     };\r\n\r\n  \r\n//     return (\r\n//       <div className=\"form-group row no-gutters\">\r\n//         {label && <label htmlFor=\"input-field\" className=\"label col-lg-3\">{label}</label>}\r\n//         <input\r\n//           id={id}\r\n//           type={type}\r\n//           value={value}\r\n//           className=\" inputField col-lg-9\"\r\n//           placeholder={placeholder}\r\n//           onChange={(e) => {handleChange(e, label)}}\r\n//         />\r\n//         </div>\r\n//     );\r\n//   };\r\n\r\n// export default InputField;","import React from 'react';\r\nimport logo from './Logo.PNG';\r\nimport './style.css';\r\n\r\n\r\n\r\nconst NavBar = () => {\r\n    return(\r\n    <nav className=\"navbar bg-light navbar-light navbar-expand-sm\">\r\n    <div className=\"container\">\r\n        <img src={logo} alt=\"Opcito\" />\r\n    </div>\r\n        <div className=\"navbar-nav\">\r\n                <a className=\"nav-item nav-link text\" href=\"#\">Preview Clients</a>\r\n                <a className=\"nav-item nav-link active text\" href=\"#\">Add Clients</a>\r\n               <a className=\"nav-item nav-link text\" href=\"#\">Log Out</a>\r\n        </div>\r\n  </nav>\r\n \r\n            \r\n            \r\n    )\r\n}\r\n\r\nexport default NavBar;","import React, { useState } from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport InputField from './InputField'\r\nimport * as Yup from 'yup';\r\nimport './style.css';\r\nimport NavBar from './NavBar';\r\nimport { FaPlusCircle, FaMinusCircle } from \"react-icons/fa\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { saveForm } from './AddClientAction';\r\n\r\n\r\nconst AddClient = props =>{\r\n \r\nconst [partner, setPartner] = useState([{ partners: \"\" }]); \r\n\r\n/**\r\n * To store the value entered by user\r\n * @param {event} e \r\n * @param {unique value} index \r\n */\r\nconst handleInputChange = (e, index) => {\r\n  const { name, value } = e.target;\r\n  const list = [...partner];\r\n  list[index][name] = value;\r\n  setPartner(list);\r\n};\r\n\r\nconst addNewField = () =>{\r\n  setPartner([...partner,{partners:\"\"}]);\r\n  \r\n}\r\n\r\nconst removeField = index => {\r\n    const list = [...partner];\r\n    list.splice(index, 1);\r\n    setPartner(list);\r\n}\r\n\r\nreturn(\r\n  <div className=\"body\">\r\n    <NavBar/>\r\n    <h1>Add Client</h1>\r\n    <div className=\"outline\">\r\n    <Formik\r\n      initialValues={{\r\n          firstName:'',\r\n          middleName:'',\r\n          lastName:'',\r\n          email:'',\r\n          phn:'',\r\n          address:'',\r\n          dob:'',\r\n          age:'',\r\n          gender:'',\r\n          occupation:'',\r\n          bussinessName:'',\r\n          typeOfBussiness:'',\r\n          partners:'',\r\n          avgIncome:'',\r\n        }}\r\n        validationSchema={\r\n          Yup.object().shape({\r\n            firstName: Yup.string()\r\n              .min(2, 'Too Short!')\r\n              .max(15, 'Too Long!')\r\n              .required('Required'),\r\n            email: Yup.string().email('Invalid email').required('Required'),\r\n            contact: Yup.number()\r\n            .required('Required Field'),\r\n          }) }\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setTimeout(() => {\r\n            // alert(JSON.stringify(values, null, 2));\r\n            setSubmitting(false);\r\n          }, 400);\r\n          localStorage.setItem(\"client\", JSON.stringify(values));\r\n        }}\r\n        >\r\n          {({ handleSubmit, }) => (\r\n            <Form className=\"form-group\" onSubmit={handleSubmit}>\r\n\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row no-gutters\">\r\n\r\n                  <div  className=\"col-lg-4\">\r\n                      <div className=\"PPBox\">\r\n                        <div className=\"circle\">\r\n                            <Field id=\"profile\" name=\"profilePicture\" type=\"file\"\r\n                             accept=\"image/png,image/jpeg\" style={{display: 'none'}}\r\n                             />\r\n                             <label htmlFor=\"profile\">\r\n                             <span className=\"material-icons add\">\r\n                               add_circle\r\n                            </span>\r\n                             </label>\r\n                        </div>\r\n\r\n                      </div>\r\n                  </div>\r\n                  \r\n                    <div  className=\"col-lg-8\">\r\n                    <InputField\r\n                        type={\"text\"}\r\n                        name={\"firstName\"}\r\n                        label={\"First Name*\"}\r\n                      />\r\n\r\n                      <InputField\r\n                        type={\"text\"}\r\n                        name={\"middleName\"}\r\n                        label={\"Middle Name\"}\r\n                      />\r\n                      <InputField\r\n                        type={\"text\"}\r\n                        name={\"lastName\"}\r\n                        label={\"Last Name\"}\r\n                      />\r\n                    </div>\r\n              </div>\r\n            </div>\r\n\r\n              <div className=\"container-fluid row\">\r\n                 <div className=\"col-lg-6\">\r\n                      <InputField\r\n                          type={\"email\"}\r\n                          label={\"Email Id*\"}\r\n                          name={\"email\"}\r\n                          />\r\n                      \r\n                  </div>\r\n                  <div className=\"col-lg-6\">\r\n                      <InputField\r\n                          type=\"tel\"\r\n                          label=\"Phone*\"\r\n                          name=\"contact\" \r\n                          />\r\n                  </div>\r\n                  \r\n              </div>\r\n              \r\n              <div className=\"container\">\r\n                      <InputField\r\n                          type=\"text\"\r\n                          label=\"Address\"\r\n                          name=\"address\" \r\n                         />\r\n              </div>\r\n\r\n              <div className=\"container-fluid row\">\r\n                    <div class=\"col-lg-6\">\r\n                      <InputField\r\n                          type=\"date\"\r\n                          label=\"DOB\"\r\n                          name=\"dob\"\r\n                          />\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-6\">\r\n                      <InputField\r\n                          type=\"number\"\r\n                          label=\"Age\"\r\n                          name=\"age\" \r\n                          />\r\n                    </div>      \r\n              </div>\r\n\r\n              <div className=\"container-fluid row\">\r\n                  <div className=\"col-lg-6\">\r\n                      <InputField\r\n                          type=\"text\"\r\n                          label=\"Business Name\"\r\n                          name=\"bName\"\r\n                          />\r\n                  </div>\r\n                        \r\n                  <div className=\"col-lg-6\">\r\n                      <InputField\r\n                          type=\"text\"\r\n                          label=\"Business Type\"\r\n                          name=\"btype\"\r\n                           />\r\n                  </div>        \r\n                </div>\r\n\r\n              <div className=\"container-fluid \">\r\n                <div className=\"row \">\r\n                <div className=\"col-lg-6\">\r\n                      <p className=\"label\">Gender</p>\r\n                      <label className=\"label\">\r\n                        <Field type=\"radio\" name=\"gender\" value=\"female\"/>Female\r\n                      </label>\r\n                      <label className=\"label\">\r\n                        <Field type=\"radio\" name=\"gender\" value=\"male\"/>Male\r\n                      </label>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                      <p className=\"label \">Occupation</p>\r\n                      <label className=\"label\">\r\n                        <Field type=\"checkbox\" name=\"occupation\" value=\"Bussiness\" />\r\n                        Business\r\n                      </label>\r\n                      <label label className=\"label\">\r\n                      <Field type=\"checkbox\" name=\"occupation\" value=\"Service\"  />\r\n                       Service\r\n                    </label>\r\n                </div> \r\n                </div>              \r\n               </div>     \r\n\r\n              <div className=\"container-fluid row\">\r\n               <div className=\"col-lg-6\"> \r\n              <label className=\"label\" htmlFor=\"partners\">Partners if any</label>\r\n                  {partner.map((x,i) =>{\r\n                          return(\r\n                            <div>\r\n                            {partner.length !== 1 && <button className=\"button\" onClick={ () => removeField(i) }><FaMinusCircle /></button> }\r\n                            <Field type=\"text\" className=\" inputField\" name=\"partners\"\r\n                                     value={x.partners}\r\n                                     onChange={e => handleInputChange(e, i)}/>\r\n                            {partner.length -1 === i && <button className=\"button\" onClick={addNewField}><FaPlusCircle /></button>}\r\n                            </div>\r\n                          )\r\n                        })}\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                <label htmlFor=\"annualS\" style={{marginTop: \"20px\"}} className=\"col-lg-5 label\">Average Annual Income:</label>\r\n                <select\r\n                          name=\"annualS\"\r\n                           style={{height:\"40px\", marginTop:\"50px\"}}>\r\n                          <option value=\"\" label=\"Salary Range\" />  \r\n                          <option value=\"30K\" label=\"29K\"></option>\r\n                          <option value=\"60K\" label=\"30K-59K\"></option>\r\n                          <option value=\"90K\" label=\"60K-90K\"></option>\r\n                       </select> \r\n              </div>\r\n              </div>    \r\n\r\n                      <button type=\"button\" className=\"btn\" style={{marginLeft:\"320px\"}}>Cancel</button>\r\n                      <button type=\"reset\" className=\"btn\">Reset</button>\r\n                      <button type=\"submit\" className=\"btn\"> Submit</button>  \r\n               \r\n            </Form> )} \r\n          </Formik>\r\n    </div>\r\n  </div>\r\n  \r\n)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  client: state.client\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      saveForm\r\n    },\r\n    dispatch\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AddClient);","import React from 'react';\r\nimport SignUp from './SignUp';\r\nimport SignIn from './SignIn';\r\nimport AddClient from './AddClient';\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\nconst App = () => {\r\n    return(\r\n        <div>\r\n            <Router>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={SignUp}/>\r\n                <Route path=\"/signUp\" component={SignUp}/>\r\n                <Route path=\"/signIn\" component={SignIn}/>\r\n                <Route path=\"/addClient\" component={AddClient}/>\r\n            </Switch>\r\n            </Router>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default App;","const initialState = {\r\n    client: [\r\n               {firstName:\"\",\r\n                email:\"\",\r\n                contact:\"\"}\r\n    ],\r\n  }\r\n  \r\n  export default function AddClientReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n      case 'USER_INPUT':\r\n        return {\r\n          ...state,\r\n          client: action.client,\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }","import { createStore, combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport AddClientReducer from \"./AddClientReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  form: formReducer,\r\n  client : AddClientReducer\r\n});\r\n\r\nexport default createStore(rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './store';\nimport './style.css';\n\nReactDOM.render(\n  <Provider store={ store }>\n  <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}